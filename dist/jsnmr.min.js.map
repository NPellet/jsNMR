{"version":3,"sources":["src/shape.1dnmr.js","src/assignment.js","src/nmr.js"],"names":["define","$","Graph","GraphNmrSignal1D","graph","options","this","lineHeight","GraphLine","getConstructor","extend","prototype","createDom","_createHandles","transform","width","height","stroke","fill","cursor","_dom","document","createElementNS","ns","maxLines","nbLines","lines","Array","i","group","appendChild","setAttribute","j","mean","std","max","serie","series","data","length","Math","abs","pow","sqrt","noiseLevel","element","redrawImpl","setHandles","redrawLines","peaks","findxs","baseLine","_getPosition","x","x1","currentPos2y","currentPos1y","y","parseFloat","getAttribute","highLigthLinesY","init","v1","searchClosestValue","getFromData","v2","dataIndex","xBeforeIndexArr","k","push","dx","X","Y","dY","ddY","maxY","stackInt","intervals","minddY","pop","e","console","log","signals","f","frecuency","possible","inter","linewith","points","sort","a","b","Assignment","self","bindingPairs","bindingLine","targetting","binding","bindingA","bindingB","highlighted","stashedLines","currentLines","mousedown","el","event","checkBindingPairs","shiftKey","graphs","lockShapes","preventDefault","stopPropagation","bb","getBBox","pos","position","left","top","otherTarget","targettable","targetEls","findTargettableElements","each","jsGraphIsShape","highlight","storeAttributes","attr","target","dom","find","bindableFilter","mouseup","unHighlight","restoreAttributes","domTarget","is","get","classList","contains","bindableFilterClass","bindSave","unlockShapes","mousemove","clientX","window","scrollX","clientY","scrollY","elements","getEquivalents","highlightEquivalents","eqs","l","allPairs","highlightPair","pair","concat","makeArray","unhighlight","force","unhighlightPair","jsGraphShape","map","targetB","elementsToHighlight","highlightedAttributes","selector","attributeEquivalents","els","fct","callback","line","posA","offset","posB","bbA","bbB","posMain","domGlobal","topSVG","lookForPair","removePair","setStrokeDasharray","applyStyle","getAssignment","splice","indexOf","A","B","setEvents","on","setAttributeNS","prepend","attrA","attrB","findElement","setAssignment","pairs","forEach","Shape1DNMR","JcampConverter","fetchUrls","nmr","urls","fetching","then","convert","keepSpectra","divLoading","css","getDom","backgroundColor","textAlign","fontSize","border","html","loading","when","apply","arguments","remove","loaded","random","recalculateIntegrals","mode","noLoop","integrals","ratio","sum","ratioSum","text","round","isNaN","setLabelText","updateLabels","integralCreated","integral","nmr1dshapes","selectedSerie","setSerie","getSerie","removeSerie","axis","name","kill","redraw","drawSeries","doNMR","append","makeGraphs1D","NMR","defaults","registerConstructor","legend","makeLegend","frame","frameWidth","frameColor","movable","setPosition","assignment","assignement","domGraphs","molecule","loadDefaults","load","oneD","url","isSymmetric","symmetric","getMode","getGraph2D","getGraphX","getGraphY","resize1DTo","w","h","resize","removeSerieX","setSerieX","removeShapes","integralBasis","serie_x","newSerie","useSlots","setLabel","autoAxis","setData","XIsMonotoneous","lineColor","setLineColor","lineWidth","setLineWidth","setLineStyle","lineStyle","getXAxis","setAxisDataSpacingMax","setAxisDataSpacingMin","getYAxis","setDisplay","primaryGridOff","secondaryGridOff","flip","setTickPosition","autoscaleAxes","draw","spectra","label","children","close","right","paddingBottom","paddingTop","paddingLeft","paddingRight","plugins","zoom","zoomMode","shape","type","strokeColor","fillColor","strokeWidth","locked","resizable","selectable","selectOnMouseDown","handles","labelEditable","horizontal","forcedCoords","getIndex","bindable","labels","color","attributes","data-bindable","onCreatedShape","highlightOnMouseOver","dblclick","plugin","wheel","direction","baseline","pluginAction","shift","ctrl","onBeforeNewShape","setHeight","getType","fl","getLabelText"],"mappings":"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":"jsnmr.min.js","sourcesContent":["\ndefine( 'src/shape.1dnmr',[ 'jquery', 'jsgraph' ], function( $, Graph ) {\n\n\t\"use strict\";\n\tvar lineHeight = 5;\n\tvar GraphLine = Graph.getConstructor( 'graph.shape.line' );\n\n\tfunction GraphNmrSignal1D( graph, options ) {\n\n\t\tthis.options = options || 2;\n\t\t\n\t}\n\n\t$.extend(GraphNmrSignal1D.prototype, GraphLine.prototype, {\n\t\t\n\t\tcreateDom: function() {\n\t\t\t\n\n\t      this._createHandles( 2, 'rect', {\n\t        transform: \"translate(-3 -3)\",\n\t        width: 6,\n\t        height: 6,\n\t        stroke: \"black\",\n\t        fill: \"white\",\n\t        cursor: 'nwse-resize'\n\t      } );\n\n\t\t\tthis._dom = document.createElementNS(this.graph.ns, 'line');\n\t\t\tthis.maxLines = 64;\n\t\t\tthis.nbLines = 0;\n\n\t\t\tthis.maxLines = 0;\n\n\n\t\t\tthis.lines = new Array(this.maxLines);\n\t\t\t\n\n\t\t\t/*this._createHandles( this.nbHandles, 'rect', { \n\t\t\t\ttransform: \"translate(-3 -3)\", \n\t\t\t\twidth: 6, \n\t\t\t\theight: 6, \n\t\t\t\tstroke: \"black\", \n\t\t\t\tfill: \"white\",\n\t\t\t\tcursor: 'nwse-resize'\n\t\t\t} );*/\n\n\n\t\t\t//I dont know how to remove the previous lines, so, I'll create an array of\n\t\t\t//empty lines that can be filled up by the system.\n\t\t\tfor(var i=this.maxLines-1;i>=0;i--){\n\t\t\t\tthis.lines[i] = document.createElementNS( this.graph.ns, 'line');\n\t\t\t\tthis.group.appendChild( this.lines[i]);\n\t\t\t\tthis.lines[i].setAttribute('stroke', 'green');\n\t\t\t}\n\t\t\t\n\t\t\t// calculate a \"hard\"-threshold as in\n\t\t\t// IEEE Transactions on biomedical engineering, vol. 52, no. 1, january\n\t\t\t// 2005, p. 76-\n\t\t\t// keep the number of standard deviations variable\n\t\t\t//nbStandardDeviations=1;\n\t\t\tvar j,mean=0,std=0,max = 0;\n\t\t\tvar serie = this.graph.series[0].data[0];\n\t\t\t//console.log(serie.length);\n\t\t\tfor(j=0;j<serie.length;j+=2){\n\t\t\t\tif(Math.abs(serie[ j + 1 ])>max)\n\t\t\t\t\tmax = Math.abs(serie[ j + 1 ]);\n\t\t\t}\n\t\t\tfor(j=0;j<serie.length;j+=2){\n\t\t\t\tmean+=serie[ j + 1 ]/max;\n\t\t\t}\n\t\t\tfor(j=0;j<serie.length;j+=2)\n\t\t\t\tstd+=Math.pow(mean-serie[ j + 1 ]/max,2);\n\t\t\tstd=Math.sqrt(max)*Math.sqrt(std*2/serie.length);\n\t\t\tthis.noiseLevel = std*3;//3 is the given number of std for nucleus 1H. For 13C it is 1.\n\t\t\t//console.log(\"noiseLevel \"+this.noiseLevel);\n\t\t\t//this.noiseLevel = 4e6;\n\t\t\t\n\t\t\tthis._dom.element = this;\n\t\t},\n\n\n\t\tredrawImpl: function() {\n\n\t\t\tthis.setHandles();\n\t\t\tthis.redrawLines( lineHeight );\n\t\t\t//this.setBindableToDom( this._dom );\n\t\t},\n\n\n\t\tredrawLines: function( height ) {\n\n\t\t\tif( this.maxLines == 0 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar peaks = this.findxs();\n\t\t\t//this.lines = [];\n\t\t\tfor(var i=peaks.length-1;i>=0;i--){\n\t\t\t    //TODO How to know the base of the spectrum?????\n\t\t\t    var baseLine = this._getPosition( { x: 10 } );\n\t\t\t\tvar x1 = this._getPosition( { x: peaks[i][0] } );\n\t\t\t\tif( this.lines[i] && x1.x && this.currentPos2y && this.currentPos1y && i<this.maxLines ) {\n\t\t\t\t\tthis.lines[i].setAttribute('stroke', 'green');\n\t\t\t\t\tthis.lines[i].setAttribute('x1', x1.x );\n\t\t\t\t\tthis.lines[i].setAttribute('x2', x1.x );\n\t\t\t\t\tthis.lines[i].setAttribute('y1', x1.y);\n\t\t\t\t\tthis.lines[i].setAttribute('y2', baseLine.y  );\n\t\t\t\t\tthis.lines[i].setAttribute('on', true );\n\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(var i=peaks.length;i<this.nbLines;i++){\n\n\t\t\t\tif( this.lines[i] ) {\n\t\t\t\t    this.lines[i].setAttribute('y1', parseFloat(this.lines[i].getAttribute('y2')));\n\t\t\t\t    this.lines[i].setAttribute('x1', -1000000 );\n\t\t\t\t\tthis.lines[i].setAttribute('x2', -1000000 );\n\t\t\t\t\tthis.lines[i].setAttribute('on', false );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.nbLines = peaks.length;\n\n\t\t},\n\n\t\thighLigthLinesY: function( height ) {\n\t\t\tfor(var i=this.lines.length-1;i>=0;i--){\n\t\t\t\tif(this.lines[i].getAttribute('on')==\"true\")\n\t\t\t\t\tthis.lines[i].setAttribute('y1', parseFloat(this.lines[i].getAttribute('y1'))-height);\n\t\t\t}\n\t\t},\n\n\n\t\tfindxs: function() {\n\t\t\tvar v1 = this.serie.searchClosestValue( this.getFromData( 'pos' ).x ),\n\t\t\t\tv2 = this.serie.searchClosestValue( this.getFromData( 'pos2' ).x ),\n\t\t\t\tv3,\n\t\t\t\tinit,\n\t\t\t\tmax,\n\t\t\t\tx=[],\n\t\t\t\ty=[];\n\t\t\t\t\n\t\t\tif(! v1 || ! v2) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t    \n\t\t\tfor(var i = v1.dataIndex; i <= v2.dataIndex ; i++) {\n\n\t\t\t\tinit = i == v1.dataIndex ? v1.xBeforeIndexArr : 0;\n\t\t\t\tmax = i == v2.dataIndex ? v2.xBeforeIndexArr : this.serie.data[i].length;\n\t\t\t\tk = 0;\n\t\t\t\t\n\t\t\t\tfor(j = init; j <= max; j+=2) {\n\t\t\t\t\tx.push(this.serie.data[ i ][ j + 0 ]);\n\t\t\t\t\ty.push(this.serie.data[ i ][ j + 1 ]);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tfor(var i=y.length-1;i>=0;i--)\n  \t\t\t\tif(Math.abs(y[i])<this.noiseLevel)\n    \t\t\t\ty[i]=0;\n\t\t\t\n\t\t\tvar dx = x[1]-x[0];\n\t\t\t// fill convolution frecuency axis\n\t\t\tvar X = []//x[2:(x.length-2)];\n\t\n\t\t\t// fill Savitzky-Golay polynomes\n\t\t\tvar Y = [];\n\t\t\tvar dY = [];\n\t\t\tvar ddY = [];\n\t\t\tfor (var j = 2; j < x.length -2; j++){\n\t\t\t\tY.push((1/35.0)*(-3*y[j-2] + 12*y[j-1] + 17*y[j] + 12*y[j+1] - 3*y[j+2]));\n\t\t\t\tX.push(x[j]);\n\t\t\t\tdY.push((1/(12*dx))*(y[j-2] - 8*y[j-1] + 8*y[j+1] - y[j+2]));\n\t\t\t\tddY.push((1/(7*Math.abs(dx*2)))*(2*y[j-2] - y[j-1] - 2*y[j] - y[j+1] + 2*y[j+2]));\n\t\t\t}\n\t\t\n\t\t\t// pushs max and min points in convolution functions\n\t\t\tvar maxY = [];\n\t\t\tvar stackInt = [];\n\t\t\tvar intervals = [];\n\t\t\tvar minddY = [];\n\t\t\tfor (var i = 1; i < Y.length -1 ; i++)\n\t\t\t{\n\t\t\t\tif ((Y[i] > Y[i-1]) && (Y[i] > Y[i+1]))\n\t\t\t\t{\n\t\t\t\t\tmaxY.push(X[i]);\n\t\t\t\t}\n\t\t\t\tif ((dY[i] < dY[i-1]) && (dY[i] < dY[i+1]))\n\t\t\t\t{\n\t\t\t\t\tstackInt.push(X[i]);\n\t\t\t\t}\n\t\t\t\tif ((dY[i] > dY[i-1]) && (dY[i] > dY[i+1]))\n\t\t\t\t{\n\t\t\t\t\ttry{\n\t\t\t\t\t\tintervals.push( [X[i] , stackInt.pop()] );\n\t\t\t\t\t}\n\t\t\t\t\tcatch(e){\n\t\t\t\t\t\tconsole.log(\"Error I don't know why\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ((ddY[i] < ddY[i-1]) && (ddY[i] < ddY[i+1]))\n\t\t\t\t{\n\t\t\t\t\tminddY.push( [X[i], Y[i]] );\n\t\t\t\t}\n\t\t\t}\n\t\t    //console.log(intervals.length);\n\t\t\t// creates a list with (frecuency, linewith, height)\n\t\t\tvar signals = new Array();\n\t\t\tfor (var j = 0; j < minddY.length; j++)\n\t\t\t{\n\t\t\t\tvar f = minddY[j];\n\t\t\t\tvar frecuency = f[0];\n\t\t\t\tvar possible = new Array();\n\t\t\t\tfor (var k=0;k<intervals.length;k++){\n\t\t\t\t    var i = intervals[k];\n\t\t\t\t\tif (frecuency > i[0] && frecuency < i[1])\n\t\t\t\t\t\tpossible.push(i);\n\t\t\t\t}\n\t\t\t\t//console.log(\"possible \"+possible.length);\n\t\t\t\tif (possible.length > 0)\n\t\t\t\t\tif (possible.length == 1)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar inter = possible[0];\n\t\t\t\t\t\tvar linewith = inter[1] - inter[0];\n\t\t\t\t\t\tvar height = f[1];\n\t\t\t\t\t\tvar points = Y;\n\t\t\t\t\t\t//console.log(frecuency);\n\t\t\t\t\t\tpoints.sort(function(a, b){return a-b});\n\t\t\t\t\t\tif ((linewith > 2*dx) && (height > 0.0001*points[0]))\n\t\t\t\t\t\t\tsignals.push( [frecuency, linewith, height] );\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t//TODO: nested peaks\n\t\t\t\t\t//\tconsole.log(possible);\n\t\t\t\t\t}\n\t\t\t}\n\t\t\t//console.log(signals);\n\t\t\treturn signals;\n\t\t}\n\t});\n\n\treturn GraphNmrSignal1D;\n});\n\n","define( 'src/assignment',[ 'jquery' ], function( $ ) {\n\n\t\"use strict\";\n\n\tvar ns = 'http://www.w3.org/2000/svg';\n\n\t\tvar Assignment = function( options ) {\n\n\t\t//\tdomMolecule, domGraphs, domGlobal, moleculeFilter, graphs\n\t\t\tvar self = this;\n\n\t\t\tthis.options = options;\n\t\t\tthis.bindingPairs = [];\n\n\t\t\tvar binding = false,\n\t\t\tbindingA = false,\n\t\t\tbindingB = false,\n\t\t\tbindingLine,\n\t\t\thighlighted = {},\n\t\t\ttargetting,\n\t\t\tstashedLines = [],\n\t\t\tcurrentLines = [],\n\n\t\t\tmousedown = function( el, event, element ) {\n\n\t\t\t\tcheckBindingPairs();\n\n\t\t\t\tif( event.shiftKey ) {\n\n\t\t\t\t\tfor( var i in options.graphs ) { // We need to lock all graphs to prevent actions on the shapes.\n\t\t\t\t\t\toptions.graphs[ i ].lockShapes();\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tbinding = true;\n\t\t\t\t\tself[ element ] = el;\n\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t}\n\n\t\t\t\t// Try to be smart and determine where to put the line ?\n\n\t\t\t\tvar bb = el.getBBox();\n\t\t\t\tvar pos = $( el ).position(),\n\n\t\t\t\tx = pos.left + bb.width / 2,\n\t\t\t\ty = pos.top + bb.height / 2;\n\n\t\t\t\tbindingLine.setAttribute('display', 'block');\n\n\t\t\t\tbindingLine.setAttribute('x1', x );\n\t\t\t\tbindingLine.setAttribute('x2', x );\n\n\t\t\t\tbindingLine.setAttribute('y1', y );\n\t\t\t\tbindingLine.setAttribute('y2', y );\n\n\n\n\t\t\t\ttargetting = otherTarget( element ); \n\t\t\t\tif( options[ otherTarget( element ) ].targettable ) {\n\n\t\t\t\t\tvar targetEls = findTargettableElements( otherTarget( element ) );\n\n\t\t\t\t\ttargetEls.each( function( ) {\n\n\t\t\t\t\t\tif( this.jsGraphIsShape ) {\n\n\t\t\t\t\t\t\tthis.jsGraphIsShape.highlight( options[ otherTarget( element ) ].targettable, \"binding\" );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstoreAttributes( options[ otherTarget( element ) ].targettable, $( this ) );\n\t\t\t\t\t\t\t$( this ).attr( options[ otherTarget( element ) ].targettable );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\totherTarget = function( target ) {\n\n\t\t\t\tif( target == \"jsGraphShape\") {\n\t\t\t\t\treturn \"targetB\";\n\t\t\t\t}\n\n\t\t\t\treturn \"jsGraphShape\";\n\t\t\t},\n\n\t\t\tfindTargettableElements = function( target ) {\n\n\t\t\t\treturn $( options[ target ].dom ).find( options[ target ].bindableFilter );\n\t\t\t},\n\n\n\t\t\tmouseup = function( el, event, target ) {\n\n\t\t\t\tcheckBindingPairs();\n\t\t\t\t\n\n\t\t\t\tif( targetting ) {\n\n\t\t\t\t\tif( options[ targetting ].targettable ) {\n\n\t\t\t\t\t\tvar targetEls = findTargettableElements( targetting );\n\n\t\t\t\t\t\ttargetEls.each( function( ) {\n\n\t\t\t\t\t\t\tif( this.jsGraphIsShape ) {\n\n\t\t\t\t\t\t\t\tthis.jsGraphIsShape.unHighlight( \"binding\" );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\trestoreAttributes( options[ targetting ].targettable, $( this ) );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t\n\n\t\t\t\t}\n\n\t\t\t\ttargetting = false;\n\t\t\t\t\n\t\t\t\tif( binding && ! target ) {\n\t\t\t\t\tbindingLine.setAttribute('display', 'none');\n\t\t\t\t\tbinding = false;\n\t\t\t\t\t\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif( ! binding ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar domTarget = event.target;\n\t\n\t\t\t\t\n\t\t\t\tbindingLine.setAttribute('display', 'none');\n\n\t\t\t\tif( ! $( domTarget ).is( options[ target ].bindableFilter ) && ! $( domTarget ).get( 0 ).classList.contains( options[ target ].bindableFilterClass ) > -1 ) {\n\n\t\t\t\t\tbinding = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tself[ target ] = event.target;\n\n\n\t\t\t\t\tbinding = false;\n\t\t\t\t\tbindSave();\n\n\t\t\n\n\t\t\t\t}\n\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tfor( var i in options.graphs ) { // We can now unlock everything\n\t\t\t\t\toptions.graphs[ i ].unlockShapes();\t\n\t\t\t\t}\t\t\t\n\t\t\t},\n\n\t\t\tmousemove = function( e ) {\n\n\t\t\t\tcheckBindingPairs();\n\t\t\t\t\n\n\t\t\t\tif( ! binding ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tbindingLine.setAttribute('x2', e.clientX + window.scrollX );\n\t\t\t\tbindingLine.setAttribute('y2', e.clientY + window.scrollY );\n\t\t\t},\n\n\t\t\thighlight = function( element, target ) {\n\t\t\t\t\n\t\t\t\tcheckBindingPairs();\n\t\t\t\t\n\t\t\t\tvar elements = [ element ];\n\t\t\t\tif( options[ target ].highlighted ) {\n\t\t\t\t\telements = getEquivalents( target, element );\n\t\t\t\t\thighlightEquivalents( target, elements );\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t//getEquivalents( target, selector );\n\n\n\t\t\t\tvar eqs = [];\n\t\t\t\t\n//\t\t\t\tunhighlight( element, target );\n\t\t\t\tfor( var i = 0, l = elements.length; i < l; i ++ ) {\n\t\t\t\n\t\t\t\t\tallPairs( highlightPair, elements[ i ], function( pair ) {\n\t\t\t\t\t\teqs = eqs.concat( $.makeArray( getEquivalents( otherTarget( target ), pair[ otherTarget( target ) ] ) ) );\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\t\n\t\t\t\teqs = $( eqs );\n\t\t\t\t\n\t\t\t\tif( options[ otherTarget( target ) ].highlighted ) {\n\t\t\t\t\thighlightEquivalents( otherTarget( target ), eqs );\n\t\t\t\t}\n\t\t\t\t\n\t\t\t},\n\n\t\t\tunhighlight = function( element, target, force ) {\n\n\t\t\t/*\tif( binding && ! force) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n*/\n\t\t\t\tcheckBindingPairs();\n\t\t\t\tvar elements = getEquivalents( target, element );\n\t\t\t\t\n\t\t\t\tvar eqs = [];\n\n\t\t\t\tfor( var i = 0; i < elements.length; i ++ ) {\n\n\t\t\t\t\tallPairs( unhighlightPair, elements[ i ], function( pair ) {\n\t\t\t\t\t\teqs = eqs.concat( $.makeArray( getEquivalents( otherTarget( target ), pair[ otherTarget( target ) ] ) ) );\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\n\t\t\t\thighlighted.jsGraphShape.map( function( el ) {\n\t\t\t\t\tthis.jsGraphIsShape.unHighlight( \"assignmentHighlighted\");\n\t\t\t\t} );\n\n\t\t\t\trestoreAttributes( options.targetB.highlighted, highlighted.targetB );\n\t\t\t\t\n\t\t\t},\n\n\t\t\thighlightEquivalents = function( target, elementsToHighlight ) {\n\n\t\t\t\tvar highlightedAttributes = options[ target ].highlighted;\n\n\t\t\t\tif( elementsToHighlight[ 0 ] && elementsToHighlight[ 0 ].jsGraphIsShape ) {\n\n\t\t\t\t\telementsToHighlight.map( function( el ) {\n\n\t\t\t\t\t\tthis.jsGraphIsShape.highlight( highlightedAttributes, \"assignmentHighlighted\");\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstoreAttributes( highlightedAttributes, elementsToHighlight );\n\t\t\t\t\telementsToHighlight.attr( highlightedAttributes );\n\n\t\t\t\t}\n\n\t\t\t\thighlighted[ target ] = elementsToHighlight;\n\n\t\t\t},\n\n\t\t\tgetEquivalents = function( target, element ) {\n\t\t\t\tvar selector = element.getAttribute( options[ target ].attributeEquivalents );\n\t\t\t\treturn $( options[ target ].dom ).find( \"[\" + options[ target ].attributeEquivalents + \"=\\\"\" + selector + \"\\\"]\");\n\t\t\t},\n\n\t\t\tstoreAttributes = function( attr, els ) {\n\n\t\t\t\tfor( var i in attr ) {\n\t\t\t\t\t\n\n\t\t\t\t\tfor( var j = 0, l = els.length; j < l; j ++ )  {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tif( ! $( els[ j ]  ).data( \"backup-\" + i ) ) {\t\n\t\t\t\t\t\t\t$( els[ j ]  ).data( \"backup-\" + i, $( els[ j ]  ).attr( i ) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t},\n\n\t\t\trestoreAttributes = function( attr, els ) {\n\n\t\t\t\tfor( var i in attr ) {\n\n\t\t\t\t\tfor( var j = 0, l = els.length; j < l; j ++ )  {\n\n\t\t\t\t\t\t$( els[ j ] ).attr( i, $( els[ j ]  ).data('backup-' + i ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tallPairs = function( fct, element, callback ) {\n\n\t\t\t\tfor( var i = 0, l = self.bindingPairs.length ; i < l ; i ++ ) {\n\n\t\t\t\t\tif( self.bindingPairs[ i ].jsGraphShape == element || self.bindingPairs[ i ].targetB == element ) {\n\n\t\t\t\t\t\tfct( self.bindingPairs[ i ] );\n\n\t\t\t\t\t\tif( callback ) {\n\t\t\t\t\t\t\tcallback( self.bindingPairs[ i ] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\thighlightPair = function( pair ) {\n\n\n\t\t\t\tvar posA = $( pair.jsGraphShape ).offset();\n\t\t\t\tvar posB = $( pair.targetB ).offset();\n\n\t\t\t\tvar bbA = $( pair.jsGraphShape )[ 0 ].getBBox();\n\t\t\t\tvar bbB = $( pair.targetB )[ 0 ].getBBox();\n\n\t\t\t\tvar posMain = options.domGlobal.offset();\n\n\t\t\t\tvar line;\n\n\t\t\t\tif( stashedLines.length > 0 ) {\n\t\t\t\t\tline = stashedLines.pop();\n\t\t\t\t\tline.setAttribute('display', 'block');\n\t\t\t\t} else {\n\t\t\t\t\tline = document.createElementNS( ns, 'line');\t\n\t\t\t\t}\n\n\t\t\t\t\n\t\t\t\tline.setAttribute('stroke', 'black');\n\t\t\t\tline.setAttribute('x1', posA.left - posMain.left + bbA.width / 2 );\n\t\t\t\tline.setAttribute('y1', posA.top - posMain.top + bbA.height / 2  );\n\t\t\t\tline.setAttribute('x2', posB.left - posMain.left + bbB.width / 2 );\n\t\t\t\tline.setAttribute('y2', posB.top - posMain.top + bbB.height / 2 );\n\n\t\t\t\tpair.line = line;\n\t\t\t\tcurrentLines.push( line );\n\n\t\t\t\ttopSVG.appendChild( line );\n\t\t\t},\n\n\n\t\t\tunhighlightPair = function( pair ) {\n\n\t\t\t\tpair.line = false;\n\n\t\t\t\tcurrentLines.map( function( line ) {\n\n\t\t\t\t\tline.setAttribute('display', 'none');\n\n\t\t\t\t} );\n\n\t\t\t\tstashedLines = stashedLines.concat( currentLines );\n\t\t\t\tcurrentLines = [];\n\t\n\t\t\t\t\n\t\t\t},\n\n\t\t\tbindSave = function() {\n\n\t\t\t\tvar pair;\n\t\t\t\tif( pair = lookForPair( self.jsGraphShape, self.targetB ) ) {\n\t\t\t\t\tremovePair( pair );\n\t\t\t\t\tunhighlightPair( pair );\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tunhighlight( self.jsGraphShape, \"jsGraphShape\", true );\n\n\t\t\t\tself.bindingPairs.push( { jsGraphShape: self.jsGraphShape, targetB: self.targetB } );\n\n\t\t\t\tself.jsGraphShape.jsGraphIsShape.setStrokeDasharray(\"5,5\");\n\t\t\t\tself.jsGraphShape.jsGraphIsShape.applyStyle();\n\t\t\t\n\t\t\t\tbindingA = null;\n\t\t\t\tbindingB = null;\n\n\t\t\t\tconsole.log( self.getAssignment() );\n\n\n\t\t\t},\n\n\t\t\tremovePair = function( pair ) {\n\t\t\t\tself.bindingPairs.splice( self.bindingPairs.indexOf( pair ), 1 );\n\t\t\t},\n\n\t\t\tlookForPair = function( A, B ) {\n\n\t\t\t\tself.bindingPairs.map( function( pair ) {\n\n\t\t\t\t\tif( pair.jsGraphShape == A || pair.targetB == B ) {\n\t\t\t\t\t\treturn pair;\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\treturn false;\n\t\t\t},\n\n\t\t\tcheckBindingPairs = function() {\n\n\t\t\t\tfor( var i = 0, l = self.bindingPairs.length ; i < l ; i ++ ) {\n\n\t\t\t\t\tif( $( options.jsGraphShape.dom ).get( 0 ).contains( self.bindingPairs[ i ].jsGraphShape ) && $( options.targetB.dom ).get( 0 ).contains( self.bindingPairs[ i ].targetB ) ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tself.bindingPairs[ i ] = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tsetEvents = function( ) {\n\n\t\t\t\toptions.jsGraphShape.dom.on('mousedown', options.jsGraphShape.bindableFilter, function( e ) {\n\t\t\t\t\t\n\t\t\t\t\tmousedown( this, e, \"jsGraphShape\" );\n\t\t\t\t});\n\n\t\t\t\toptions.jsGraphShape.dom.on('mouseover', options.jsGraphShape.bindableFilter, function( e ) {\n\t\t\t\t\t\n\t\t\t\t\thighlight( this, \"jsGraphShape\" );\n\t\t\t\t});\n\n\t\t\t\toptions.jsGraphShape.dom.on('mouseout', options.jsGraphShape.bindableFilter, function( e ) {\n\t\t\t\t\tunhighlight( this, \"jsGraphShape\" );\n\t\t\t\t});\n\n\t\t\t\toptions.targetB.dom.on('mousedown', options.targetB.bindableFilter, function( e ) {\n\t\t\t\t\tmousedown( this, e, \"targetB\" );\n\t\t\t\t});\n\n\t\t\t\toptions.targetB.dom.on('mouseover', options.targetB.bindableFilter, function( e ) {\n\t\t\t\t\thighlight( this, \"targetB\" );\n\t\t\t\t});\n\n\t\t\t\toptions.targetB.dom.on('mouseout', options.targetB.bindableFilter, function( e ) {\n\t\t\t\t\tunhighlight( this, \"targetB\" );\n\t\t\t\t});\n\n\t\t\t\toptions.jsGraphShape.dom.on('mouseup', function( e ) {\n\t\t\t\t\tmouseup( this, e, \"jsGraphShape\" );\n\t\t\t\t});\n\n\t\t\t\toptions.targetB.dom.on('mouseup', function( e ) {\n\t\t\t\t\tmouseup( this, e, \"targetB\" );\n\t\t\t\t});\n\n\t\t\t\toptions.domGlobal.on('mouseup', function( e ) {\n\t\t\t\t\tmouseup( this, e, false );\n\t\t\t\t})\n\n\t\t\t\toptions.domGlobal.on('mousemove', function( e ) {\n\t\t\t\t\tmousemove( e );\n\t\t\t\t})\n\t\t\t};\n\n\n\t\t\tvar topSVG = document.createElementNS( ns, 'svg' );\n\t\t\ttopSVG.setAttributeNS(\"http://www.w3.org/2000/xmlns/\", \"xmlns:xlink\", \"http://www.w3.org/1999/xlink\");\n\t\t\ttopSVG.setAttribute('xmlns', ns );\n\t\t\n\t\t\ttopSVG.setAttribute('style', 'position: absolute');\n\t\t\ttopSVG.setAttribute('width', options.domGlobal.width( ) )\n\t\t\ttopSVG.setAttribute('height', options.domGlobal.height( ) )\n\t\t\ttopSVG.setAttribute('pointer-events', 'none');\n\n\t\t\tbindingLine = document.createElementNS( ns, 'line');\n\t\t\tbindingLine.setAttribute('stroke', 'black');\n\n\t\t\ttopSVG.appendChild( bindingLine );\n\n\t\t\toptions.domGlobal.prepend( topSVG );\n\t\t\tsetEvents( );\t\n\t};\n\n\tAssignment.prototype.getAssignment = function() {\n\n\t\tvar self = this;\n\n\t\treturn this.bindingPairs.map( function( pair ) {\n\n\t\t\tif( ! pair ) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tvar attrA = pair.jsGraphShape.getAttribute( self.options.jsGraphShape.attributeEquivalents );\n\t\t\tvar attrB = pair.targetB.getAttribute( self.options.targetB.attributeEquivalents );\n\n\t\t\treturn [ attrA, attrB ];\n\t\t} );\n\t}\n\n\n\tAssignment.prototype.findElement = function( target, selector ) {\n\n\t\treturn $( this.options[ target ].dom ).find( \"[\" + this.options[ target ].attributeEquivalents + \"=\\\"\" + selector + \"\\\"]\");\t\n\t};\n\n\n\tAssignment.prototype.setAssignment = function( pairs ) {\n\n\t\tvar self = this;\n\t\tself.bindingPairs = [];\n\n\t\tpairs.forEach( function( pair ) {\n\n\t\t\tself.bindingPairs.push( { jsGraphShape: self.findElement( 'jsGraphShape', pair[ 0 ] ), targetB: self.findElement( 'targetB', pair[ 1 ] ) } );\n\n\t\t} );\n\t}\n\n\treturn Assignment;\n\n});\n\n","define( 'src/nmr.js',[ 'jsgraph', './shape.1dnmr', './assignment', 'jcampconverter' ], function( Graph, Shape1DNMR, Assignment, JcampConverter ) {\n\n\t// Root here\n\tvar defaults = {\n\n\t\tmode: '1d',\n\t\tmolecule: false,\n\t\turls: {\n\n\t\t}\n\t};\n\n\tfunction fetchUrls( nmr, urls, options ) {\n\n\t\tvar fetching = [];\n\t\tfor( var i in urls ) {\n\t\t\tfetching.push( $.get( urls[ i ] ).then( function( data ) { return JcampConverter.convert( data, {keepSpectra:true} ) } ) );\n\t\t}\n\n\t\tif( ! nmr.divLoading ) {\n\n\t\t\tnmr.divLoading = $(\"<div />\").css( {\n\n\t\t\t\twidth: nmr.getDom().width(),\n\t\t\t\theight: nmr.getDom().height(),\n\t\t\t\tposition: 'absolute',\n\t\t\t\tbackgroundColor: 'rgba(200, 200, 200, 0.5)',\n\t\t\t\ttextAlign: 'center',\n\t\t\t\tlineHeight: nmr.getDom().height() + \"px\",\n\t\t\t\tfontSize: '2em',\n\t\t\t\tborder: \"1px solid #c0c0c0\"\n\n\t\t\t} ).html(\"Loading...\");\n\n\t\t\tnmr.getDom().prepend( nmr.divLoading );\n\t\t}\n\n\t\tnmr.loading = nmr.loading || 0\n\t\tnmr.loading++;\n\n\t\t$.when.apply( $, fetching ).then( function() {\n\n\t\t\tvar j = 0;\n\t\t\tfor( i in urls ) {\n\n\t\t\t\turls[ i ] = arguments[ j ];\n\t\t\t\tj++;\n\t\t\t}\n\n\t\t\tnmr.loading--;\n\t\t\tif( nmr.loading == 0 ) {\n\t\t\t\tnmr.divLoading.remove();\n\t\t\t\tnmr.divLoading = false;\n\t\t\t}\n\n\t\t\tnmr.series.push( urls );\n\t\t\tnmr.loaded( urls, options, \"a\" + Math.random() );\n\t\t} );\n\t}\n\n\tvar ratio, ratioSum;\n\n\tvar integrals = [];\n\n\tfunction recalculateIntegrals( nmr, mode, noLoop ) {\n\n\t\tvar sumMax = 0;\n\t\tvar l = integrals.length;\n\n\n\t\tif( l == 1 ) {\n\t\t\tratio = 150 / integrals[ 0 ].sum;\n\t\t\tratioSum = integrals[ 0 ].sum;\n\t\t}\n\n\t\tfor( var i = 0; i < l ; i ++ ) {\n\n\t\t\tintegrals[ i ].ratio = ratio;\n\n\t\t\tvar text = Math.round( integrals[ i ].sum / ratioSum * 100 ) / 100;\n\t\t\tif( ! isNaN( text ) ) {\n\t\t\t\tintegrals[ i ].setLabelText( text );\n\t\t\t}\n\n\t\t\t//nmr.integrals[ mode ][ i ].setLabelPosition( {0 );\n\t\t\tintegrals[ i ].updateLabels();\n\t\t}\n\t}\n\n\tfunction setSyncPos( nmr, from, to ) {\n\n\t\tvar pos1 = from.getFromData( 'pos' ),\n\t\t\tpos2 = from.getFromData( 'pos2' );\n\n\t\tvar pos1t = to.getFromData( 'pos' ),\n\t\t\tpos2t = to.getFromData( 'pos2' );\n\n\t\tpos1t.x = pos1.y;\n\t\tpos1t.y = pos1.x;\n\n\t\tpos2t.x = pos2.y;\n\t\tpos2t.y = pos2.x;\n\n\t} \n\n\tvar nmr1dshapes = [];\n\n\tfunction integralCreated( nmr, mode, integral ) {\n\n\t\tnmr1dshapes.push( integral );\n\n\t\tif( nmr.graphs.selectedSerie ) {\n\t\t\tintegral.setSerie( nmr.graphs.selectedSerie );\t\n\t\t} else {\n\t\t\tintegral.setSerie( nmr.graphs.getSerie( 0 ) );\t\n\t\t}\n\t/*\t\n\t\tvar nmrint = makeNMRIntegral( nmr, mode, integral )\n\t\t\tnmrint.setSerie( integral.getSerie() );\n\t*/\t\n\t\tintegral.integral = integral;\n\t\t\n\t\t//nmrint.setProp( 'position', integral.getProp( 'position', 0 ), 0 );\n\t\t//nmrint.setProp( 'position', integral.getProp( 'position', 1 ), 1 );\n\n\t\tintegrals.push( integral );\n\t\t//nmrint.originalShape = integral;\n\t}\n\n\tfunction integralChanged( nmr, mode, peak ) {\n\n\t\tif( ! peak.integral ) {\n\t\t\treturn;\n\t\t}\n/*\n\t\tpeak.integral.setPosition();\n\n\t\tif( peak.syncTo ) {\n\t\t\tsetSyncPos( nmr, peak, peak.syncTo );\n\t\t\tpeak.syncTo.redrawImpl();\n\n\t\t\tif( peak.syncTo.integral ) {\n\t\t\t\tpeak.syncTo.integral.setPosition();\n\t\t\t}\n\t\t}\n\t\n\n\t\trecalculateIntegrals( nmr, mode );\n\t\t*/\n\t}\n\n\n\tfunction integralRemoved( nmr, mode, peak ) {\n\n\t\tif( peak.integral) {\n\t\t\tvar i = peak.integral;\n\t\t\tpeak.integral = false;\n\t\t\ti.originalShape = false;\n\n\t\t\tif( i._inDom ) {\n\t\t\t\ti.kill();\n\t\t\t}\n\n\t\t\tnmr.integrals[ mode ].splice( nmr.integrals[ mode ].indexOf( i ), 1 );\n\n\t\t\tnmr1dshapes.splice( nmr1dshapes.indexOf( peak ), 1 );//push( integral );\n\n\t\t\tif( nmr1dshapes.length == 1 ) {\n\n\t\t\t\tnmr.integralBasis = nmr.integrals[ mode ][ 0 ].lastSum;\n\t\t\t}\n\t\t}\n\n\t\trecalculateIntegrals( nmr, mode );\n\t}\n\n\tfunction getOtherMode( nmr, mode ) {\n\t\treturn mode == 'x' ? 'y' : ( mode == 'y' ? 'x' : ( console.error( \"Mode not recognized\") ) );\n\t}\n\n\n\tfunction makeNMRIntegral( nmr, mode, integral ) {\n\t\t// External call\n\t\tvar shape = nmr.graphs[ mode ].newShape( { \n\t\t\t\ttype: 'nmrintegral', \n\t\t\t\tfillColor: 'transparent', \n\t\t\t\tstrokeColor: '#AF002A', \n\t\t\t\tstrokeWidth: '2px',\n\t\t\t\tlabel: {\n\t\t\t\t\tposition: { },\n\t\t\t\t\ttext: 1,\n\t\t\t\t\tcolor: 'red',\n\t\t\t\t\tanchor: 'middle'\n\t\t\t\t},\n\n\t\t\t\tshapeOptions: {\n\t\t\t\t\tlocked: true\n\t\t\t\t}\n\t\t\t } );\n\t\t\n\t\tshape.setSerie( nmr.getGraphX().getSerie( 0 ) );\n\t\tshape.setLabelText( \"NMRVal\" );\n\t\tshape.draw();\n\t\tshape.redraw();\n\n\t\treturn shape;\n\t}\n\t\n\tfunction removeSerie( nmr, axis, name ) {\n\n\t\tvar serie;\n\t\tif( ( serie = nmr.graphs[ axis ].getSerie( name ) ) ) {\n\t\t\tserie.kill();\n\t\t}\n\n\t\tnmr.graphs[ axis ].redraw();\n\t\tnmr.graphs[ axis ].drawSeries();\n\n\t}\n\n\t\t\n\tfunction doNMR( nmr ) { \n\t\t\n\t\tnmr.options.dom.append('<div />');\n\t\tnmr.makeGraphs1D();\n\t\n\t}\n\n\n\tfunction NMR( options ) {\n\n\t\tthis.options = $.extend( true, {}, defaults, options );\n\t\tthis.series = [];\n\n\t\t// 1D\n\t\n\n\t\tGraph.registerConstructor(\"graph.shape.1dnmr\", Shape1DNMR);\n\t\tvar self = this;\n\t\t\n/*\n\t\tif( this.isSymmetric() ) {\n\t\t\tthis.nmrSignal1dOptions.y = $.extend(true, {}, this.nmrSignal1dOptions.x );\n\t\t\tthis.nmrSignal1dOptions.y.shapeOptions.axis = 'y';\n\t\t}\n\n\t\tthis.nmrSignal1dOptions.x = $.extend( true, {}, this.nmrSignal1dOptions.x, {} );\n\t\tthis.nmrSignal1dOptions.y = $.extend( true, {}, this.nmrSignal1dOptions.x, {} );\n\n\t\t*/\n\t\tthis.graphs = { x: null };\n\t\tthis.integrals = { x: [] };\n\n\t\tdoNMR( this );\n\n\n\t\tswitch( this.options.mode ) {\n\t\t\tcase '2d':\n\t\t\t\t\n\t\t\tbreak;\n\n\t\t\tcase '1d':\n\t\t\t\tthis.legend = this.graphs.makeLegend( { frame: true, frameWidth: 2, frameColor: 'grey', movable: true, backgroundColor: 'white' } );\n\t\t\t\tthis.legend.setPosition( { x: \"300px\", y: \"40px\" }, 'right' );\n\n\t\t\tbreak;\n\t\t}\n\n\t\tif( this.options.assignment ) {\n\n\t\t\tthis.assignement = new Assignment( $.extend( this.options.assignment, { graphs: this.graphs, domGraphs: this.options.dom } ) );\t\n\t\t\t//this.assignement.setAssignment( [ [ \"1\", \"gGQHLIeIUjdA~dPHeT\" ] ] );\n\t\t}\n\t};\n\n\n\tvar loadDefaults = {\n\t\turls: {}\n\t};\n\n\tNMR.prototype.load = function( load ) {\n\n\t\tvar load = $.extend( true, {}, loadDefaults, load );\n\t\tvar urls = {};\n\t\tswitch( this.options.mode ) {\n\n\n\t\t\tcase '1d':\n\t\t\t\t\n\t\t\t\tload.urls.oneD = load.url || load.urls.oneD || load.urls.x;\n\t\t\t\turls.x = load.urls.oneD;\t\n\n\n\t\t\tbreak;\n\t\t}\n\n\n\t\tfetchUrls( this, urls, load );\n\t};\n\n\n\tNMR.prototype.isSymmetric = function() {\n\t\treturn this.options.symmetric || false;\n\t};\n\n\tNMR.prototype.getMode = function() {\n\t\treturn this.options.mode;\n\t};\n\n\tNMR.prototype.getDom = function() {\n\t\treturn this.options.dom;\n\t};\n\n\tNMR.prototype.getGraph2D = function() {\n\t\treturn this.graphs['_2d'];\n\t};\n\n\tNMR.prototype.getGraphX = function() {\n\t\treturn this.graphs['x'];\n\t};\n\n\tNMR.prototype.getGraphY = function() {\n\t\treturn this.graphs['y'];\n\t};\n\n\tNMR.prototype.resize1DTo = function( w, h ) {\n\t\tthis.graphs.resize( w, h );\n\t\tthis.graphs.drawSeries();\n\t};\n\n\tNMR.prototype.removeSerieX = function( name ) {\n\t\tremoveSerie( this, 'x', name );\n\t};\n\n\tNMR.prototype.setSerieX = function( name, data, options ) {\n\n\t\tif( this.graphs.getSerie( name ) ) {\n\n\t\t\tthis.graphs.getSerie( name ).kill();\n\t\t\tthis.graphs.removeShapes();\n\t\t\tthis.integralBasis = false;\n\n\t\t}\n\n\t\tvar serie_x = this.graphs.newSerie( name, $.extend( { useSlots: true }, options ) )\n\t\t\t.setLabel( \"My serie\" )\n\t\t\t.autoAxis()\n\t\t\t.setData( data )\n\t\t\t.XIsMonotoneous();\n\n\t\tif( options.lineColor ) {\n\t\t\tserie_x.setLineColor( options.lineColor );\n\t\t}\n\n\t\tif( options.lineWidth ) {\n\t\t\tserie_x.setLineWidth( options.lineWidth );\n\t\t}\n\n\t\tif( options.setLineStyle ) {\n\t\t\tserie_x.setLineStyle( options.lineStyle );\n\t\t}\n\n\t\t//serie_x.degrade( 1 ).kill()\n\n\t\tserie_x.XIsMonotoneous();\n\t\tserie_x.getXAxis().setAxisDataSpacingMax(0);\n\t\tserie_x.getXAxis().setAxisDataSpacingMin(0);\n\n\t\tserie_x.getYAxis().setDisplay( false ).primaryGridOff( false ).secondaryGridOff( false );\n\t\tserie_x.getXAxis().flip(true).setLabel('ppm').primaryGridOff( false ).secondaryGridOff( false ).setTickPosition( 'outside' )\n\n\t\tthis.graphs.autoscaleAxes();\n\t\tthis.graphs.draw();\n\t};\n\n\n\tNMR.prototype.loaded = function( series, options, name ) {\n\t\t\n\t\tswitch( this.getMode() ) {\n\n\t\t\tcase '1d':\n\n\t\t\t\tthis.setSerieX( name, series.x.spectra[ 0 ].data[ 0 ], { label: \"SomeLabel\" } );\n\n\n\t\t\tbreak;\n\t\t\t\n\t\t}\n\t\t\n\t};\n\n\n\tNMR.prototype.makeGraphs1D = function() {\n\n\t\tvar self = this;\n\n\t\tthis.graphs = new Graph( this.getDom().children().get(0), {\n\n\t\t\tclose: { left: false, top: false, right: false },\n\t\t\tpaddingBottom: 0,\n\t\t\tpaddingTop: 0,\n\t\t\tpaddingLeft: 0,\n\t\t\tpaddingRight: 0,\n\n\t\t\tplugins: {\n\t\t\t\t'zoom': { \n\t\t\t\t\tzoomMode: 'x'\n\n\t\t\t\t},\n\n\t\t\t\t'shape': { \n\t\t\t\t\ttype: 'nmrintegral',\n\t\t\t\t\tstrokeColor: '#AF002A', \n\t\t\t\t\tfillColor: \"transparent\",\n\t\t\t\t\tstrokeWidth: 2,\n\n\t\t\t\t\tlocked: false,\n\t\t\t\t\tmovable: true,\n\t\t\t\t\tresizable: true,\n\t\t\t\t\tselectable: true,\n\t\t\t\t\tselectOnMouseDown: true,\n\t\t\t\t\thandles: true,\n\t\t\t\t\tlabelEditable: true,\n\n\t\t\t\t\thorizontal: true, \n\t\t\t\t\tforcedCoords: { y: function( shape ) { return ( 20 + shape.serie.getIndex() * 5 ) + \"px\"; } },\n\t\t\t\t\tbindable: true,\n\t\t\t\t\taxis: 'x',\n\n\t\t\t\t\tlabels: [ { text: \"Something\", color: 'red' } ] ,\n\n\n\n\t\t\t\t\tattributes: { 'data-bindable': function() { return 1; } },\n\n\t\t\t\t\tonCreatedShape: function( shape ) {\n\t\t\t\t\t\t//console.log( self.graphs[ 'x' ].getSerie( 0 ) );\n\t\t\t\t\t\tshape.setSerie( self.graphs.getSerie( 0 ) );\n\t\t\t\t\t\tintegralCreated( self, 'x', shape );\n\t\t\t\t\t},\n\n\n\t\t\t\t\thighlightOnMouseOver: true\n\t\t\t\t},\n\t\t\t},\n\n\n\t\t\tdblclick: {\n\t\t\t\ttype: 'plugin',\n\t\t\t\tplugin: 'zoom',\n\t\t\t\toptions: {\n\t\t\t\t\tmode: 'total'\n\t\t\t\t}\n\t\t\t},\n\n\n\t\t\twheel: {\n\t\t\t\ttype: 'plugin',\n\t\t\t\tplugin: 'zoom',\n\t\t\t\toptions: {\n\t\t\t\t\tdirection: 'y',\n\t\t\t\t\tbaseline: 0\n\t\t\t\t}\n\t\t\t},\n\n\n\t\t\tpluginAction: {\n\t\t\t\t'zoom': { shift: false, ctrl: false },\n\t\t\t\t'shape': { shift: true, ctrl: false }\n\t\t\t},\n\n\t\t\tonBeforeNewShape: function() {\n\n\t\t\t\tif( ! this.selectedSerie && this.series.length > 1 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t} );\n\n\n\t\tthis.graphs.setHeight(300);\n\n\n\t\tthis.graphs.on(\"shapeChanged\", function( shape ) {\n\n\t\t\t\n\n\t\t\tif( shape.getType() == \"nmrintegral\" ) {\n\n\t\t\t\trecalculateIntegrals( self );\n\n\t\t\t}\n\n\n\n\t\t\t\n\t\t});\n\n\t\tthis.graphs.on(\"shapeLabelChanged\", function( shape ) {\n\n\n\t\t\tif( shape.getType() == \"nmrintegral\" ) {\n\n\t\t\t\tvar fl = parseFloat( shape.getLabelText( 0 ) );\n\t\t\t\tratioSum = shape.sum / fl;\n\t\t\t\trecalculateIntegrals( self );\n\n\t\t\t}\n\n\n\n\t\t} );\n\n/*\n\t\tthis.graphs[ 'x' ].on(\"shapeRemoved\", function( shape ) {\n\n\t\t\tif( shape.integral ) {\n\t\t\t\tintegralRemoved( self, 'x', shape );\n\t\t\t} else if( shape.originalShape ) {\n\t\t\t\tshape.originalShape.kill();\n\t\t\t}\n\t\t});\n\n\n\n\t\tthis.graphs[ 'x' ].on(\"shapeNew\", function( shape ) {\n\n\t\t\tif( shape.getType() == \"1dnmr\" ) {\n\t\t\t\tintegralCreated( self, 'x', shape );\n\n\t\t\t\tshape.setHighlightAttributes( { 'stroke-width': 5 } );\n\t\t\t\tshape.addClass(\"bindable\");\n\t\t\t}\n\t\t});\n\n*/\n\t\n\t\t/********************************************/\n\t\t/** DRAW ALL ********************************/\n\t\t/********************************************/\n\n\n\t\tthis.graphs.redraw( );\t\n\t\tthis.graphs.drawSeries();\t\n\n\t};\n\n\treturn NMR;\n\t\n\n});\n\n"]}